# .github/workflows/simple_processor.yml
name: Simple String Processor Workflow

on:
  repository_dispatch:
    types: [run_simple_processor]

jobs:
  run-processor:
    runs-on: ubuntu-latest

    # Only run if email and file are present in the dispatch payload
    if: github.event.client_payload.email != '' && github.event.client_payload.file

    steps:
      # Step 1: Checkout your repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up a Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # Step 3: Prepare the uploaded file (fail early if payload is missing)
      - name: Prepare uploaded file
        run: |
          mkdir -p temp_input
          echo "${{ toJSON(github.event.client_payload.file) }}" | python - <<'PY'
          import json, base64, sys, os
          data = sys.stdin.read().strip()
          if not data:
              print("ERROR: No file payload found (github.event.client_payload.file is empty).")
              sys.exit(1)
          try:
              file = json.loads(data)
          except Exception as e:
              print("ERROR: Could not parse payload as JSON:", e)
              print("RAW DATA:", data)
              sys.exit(1)
          if not file.get("filename") or not file.get("content"):
              print("ERROR: Payload missing 'filename' or 'content'. Payload was:")
              print(file)
              sys.exit(1)
          os.makedirs("temp_input", exist_ok=True)
          outpath = os.path.join("temp_input", file["filename"])
          with open(outpath, "wb") as f:
              f.write(base64.b64decode(file["content"]))
          print("Wrote file:", outpath)
          PY

      # Step 3b: Debug payload and files to verify what we have
      - name: Debug payload and files
        run: |
          echo 'Payload seen by Actions:'
          echo '${{ toJSON(github.event.client_payload.file) }}'
          echo 'Files in temp_input:'
          ls -la temp_input || true

      # Step 4: Run your Python script on the uploaded file (guard existence)
      - name: Run simple processor
        run: |
          set -e
          IN="temp_input/${{ github.event.client_payload.file.filename }}"
          if [ ! -f "$IN" ]; then
            echo "ERROR: Input file not found: $IN"
            echo "Payload was:"
            echo '${{ toJSON(github.event.client_payload.file) }}'
            exit 1
          fi
          python simple_processor.py "$IN"
        env:
          PYTHONPATH: .

      # Step 5: Package the output files into a single zip file
      - name: Archive output files
        run: |
          if [ ! -d "Z_output_files" ]; then
            echo "ERROR: Output directory 'Z_output_files' not found. Did the processor create it?"
            exit 1
          fi
          zip -r output_file.zip Z_output_files

      # Step 6: Send the zip file to the user's email
      - name: Send email with results
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          to: ${{ github.event.client_payload.email }}
          from: GitHub Actions <no-reply@github.com>
          subject: Your Simple Processor Results
          body: Your file has been processed! The output is attached.
          attachments: output_file.zip
